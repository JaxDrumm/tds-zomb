<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCrate</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>parFurniture</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize

event_inherited();

maxHealth = 50;
Health = 50;
lerpBar = 0;
lerpHealth = 50;
lerpBarAlpha = 0;

Scale = 1;
fullScale = 1;
shadowLength = 4;

healthbarDist = 128;

xOffsetHealthbar = 0;
yOffsetHealthbar = sprite_height * 0.75;

attackedDirection = irandom(360);
directionOffset = 45;

uFlashAmount = shader_get_uniform(shdFlash, "flashAmount");
flashAmount = 0;
flashFactor = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Break if Applicable

if (Health &lt;= 0)
    {
        repeat (irandom_range(4, 6))
            {
                with (instance_create(x, y, objWoodenPlank))
                    {
                        direction = other.attackedDirection + irandom_range(other.directionOffset * -1, other.directionOffset);
                    }
            }
            
        Shake += 64;
            
        soundPlayRandomPitch(sndWoodBreak);
        
        clAddMessage("Broke crate at (" + string(x) + ", " + string(y) + ".)");
        
        instance_destroy();
    }

lerpAmount = (Scale / fullScale);
    
Scale = lerp(Scale, fullScale, 0.2);
flashFactor = lerp(flashFactor, 0, 0.2);
lerpHealth = lerp(lerpHealth, Health, 0.2);
flashAmount = lerp(0, 0.35, flashFactor);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Self, Shadow

draw_sprite_ext(sprite_index, image_index, x + shadowLength, y + shadowLength, Scale, Scale, image_angle, c_black, image_alpha * 0.5);

if (flashAmount &gt; 0)
    {
        shader_set(shdFlash);
        shader_set_uniform_f(uFlashAmount, flashAmount);
    }
draw_sprite_ext(sprite_index, image_index, x, y, Scale, Scale, image_angle, image_blend, image_alpha);
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
