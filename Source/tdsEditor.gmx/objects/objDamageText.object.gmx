<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize

goAway = false;
alarm[0] = room_speed * 0.15;

floatAmount = 0;
floatAdd = 0.25;

Damage = "ERROR";
Critical = false;
Scale = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go Away

goAway = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy if Out of View

if (y &lt; (view_yview - 100))
    {
        instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Self

var xPos = x - view_xview;
var yPos = y - view_yview;

draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(fontDamage);

var Mix = sin_move(0, 1, 3.5, 0);

draw_set_halign(fa_center);
draw_set_valign(fa_middle);

if (Critical)
    {
        var Colour = merge_colour(c_yellow, c_white, Mix);
        var Colour2 = merge_colour(Colour, c_black, 0.75);
        Scale = lerp(Scale, 2, 0.15);
    }
else
    {
        var Colour = merge_colour(c_red, c_purple, Mix);
        var Colour2 = merge_colour(Colour, c_black, 0.75);
        Scale = lerp(Scale, 1, 0.15);
    }

draw_set_colour(Colour2);
draw_text_transformed(xPos + 1, yPos + 2, Damage, Scale, Scale, 0);
draw_set_colour(Colour);
draw_text_transformed(xPos, yPos, Damage, Scale, Scale, 0);

if (Critical)
    {
        var Height = (((string_height(Damage) * Scale) / 2) + 6);
        draw_set_font(fontCrit);
        draw_set_valign(fa_bottom);
        draw_set_colour(c_maroon);
        draw_text(xPos + 2, yPos + (Height) + 2, "CRIT!");
        draw_set_colour(c_red);
        draw_text(xPos - 2, yPos + (Height) - 2, "CRIT!");
    }


if (goAway)
    {
        floatAmount += floatAdd;
        y -= floatAmount;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
